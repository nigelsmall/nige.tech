= What's New in Py2neo v3?

Py2neo is a client library and toolkit for working with [[http://neo4j.com/|Neo4j]] from within Python applications and from the command line.
The latest version is //v3 beta 1// and can be installed with:

``` bash
$ pip install py2neo==3b1
```

Lots of things have changed between py2neo v2 and py2neo v3.
Here's a summary of the main changes.

== Bolt Support

Version 3 provides support for Bolt, the new native binary protocol developed for Neo4j.
If available, Bolt will be used automatically by the library instead of HTTP.

== Cypher Execution

A significant portion of the library internals have been rewritten to allow both Bolt and HTTP to work side-by-side.
To this end, a lot of the functionality that was previously provided by the HTTP API now uses Cypher instead.

Related to this is the new, simpler way to run Cypher queries.
Now, instead of using ``graph.cypher.execute(...)``, you can use ``graph.run(...)``.
For example:

``` python
>>> from py2neo import Graph
>>> graph = Graph(password="password")
>>> for record in graph.run("UNWIND range(1, 3) AS n RETURN n"):
...     print(record["n"])
1
2
3
```

Cypher results are now also retrieved lazily instead of being built into a list.
This can help with memory usage.

== Tasks/Builders Rolled into Transactions

== Composable Objects

Nodes, Relationships, Subgraphs and Walkables...

== The DBMS

In version 2, the [[http://py2neo.org/2.0/internals.html#service-root|``ServiceRoot``]] class represented a root REST resource, such as ``http://localhost:7474/``.
This has now been replaced by the [[http://py2neo.org/v3/database.html#py2neo.database.DBMS|``DBMS``]] class which maps to a single installation of Neo4j, as opposed to the graph database it exposes.
The distinction between ``Graph`` and ``DBMS`` will become more important when multi-tenancy is introduced in a future Neo4j release.

== URIs & Authentication

== Batches & Manual Indexing

== Neokit

== Spatial
